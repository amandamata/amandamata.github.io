<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotnet on amandamata</title>
    <link>https://amandamata.github.io/tags/dotnet/</link>
    <description>Recent content in dotnet on amandamata</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 22 Feb 2023 07:19:25 -0300</lastBuildDate><atom:link href="https://amandamata.github.io/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing a sqs publisher and consumer using dotnet</title>
      <link>https://amandamata.github.io/queue-csharp-sqs/</link>
      <pubDate>Wed, 22 Feb 2023 07:19:25 -0300</pubDate>
      
      <guid>https://amandamata.github.io/queue-csharp-sqs/</guid>
      <description>In this post, I pass an introduction to a queue and how to use it. Now I gonna explain how to implement an sqs consumer and publisher using c# dotnet. SQS What is SQS?
SQS (Simple Queue Service) is an Amazon service that lets you send, store, and receive messages between software components at any volume, without losing messages or requiring other services to be available.
The best part is free, actually to pay for this service you gonna need to send over 1 million requests per month then amazon is going to bill you.</description>
    </item>
    
    <item>
      <title>Curly braces on new line in vscode</title>
      <link>https://amandamata.github.io/curly-brace/</link>
      <pubDate>Sat, 18 Feb 2023 06:13:07 -0300</pubDate>
      
      <guid>https://amandamata.github.io/curly-brace/</guid>
      <description>This pass week I wake up early every day trying to do only one thing: make Visual Studio Code insert a new line before a curly bracket, braces {}.
I have this:
if (true){ // do something } and I want to format it like this:
if (true) { // do something } Was not as easy thing as may seem. Many sites and stack overflow have the same question, with many disappointing people without a resolution.</description>
    </item>
    
  </channel>
</rss>
