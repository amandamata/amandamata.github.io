<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>queue on amandamata</title>
    <link>https://amandamata.github.io/tags/queue/</link>
    <description>Recent content in queue on amandamata</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 22 Feb 2023 07:19:25 -0300</lastBuildDate><atom:link href="https://amandamata.github.io/tags/queue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing a sqs publisher and consumer using dotnet</title>
      <link>https://amandamata.github.io/queue-csharp-sqs/</link>
      <pubDate>Wed, 22 Feb 2023 07:19:25 -0300</pubDate>
      
      <guid>https://amandamata.github.io/queue-csharp-sqs/</guid>
      <description>In this post, I pass an introduction to a queue and how to use it. Now I gonna explain how to implement an sqs consumer and publisher using c# dotnet. SQS What is SQS?
SQS (Simple Queue Service) is an Amazon service that lets you send, store, and receive messages between software components at any volume, without losing messages or requiring other services to be available.
The best part is free, actually to pay for this service you gonna need to send over 1 million requests per month then amazon is going to bill you.</description>
    </item>
    
    <item>
      <title>Application of queue</title>
      <link>https://amandamata.github.io/queue/</link>
      <pubDate>Wed, 08 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://amandamata.github.io/queue/</guid>
      <description>What is a queue? A queue is a collection of entities that are maintained in a sequence and can be modified by the addition of entities at one end of the sequence and the removal of entities from the other end of sequence. Wikipedia
Imagine that we have a user&amp;rsquo;s API.
We can create users in the system and then retrieve them back, maybe update and maybe delete them, send an email to the user, and also make a request to another API.</description>
    </item>
    
  </channel>
</rss>
